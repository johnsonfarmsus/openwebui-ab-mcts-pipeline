version: '3.8'

networks:
  openwebui-net:
    driver: bridge

services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - WEBUI_SECRET_KEY=your-secret-key-here
      - WEBUI_REQUEST_TIMEOUT=600
      - WEBUI_STREAM_TIMEOUT=600
      - AIOHTTP_CLIENT_TIMEOUT=600
      - ENABLE_OPENAI_API=True
      - OPENAI_API_BASE_URLS=https://api.openai.com/v1;http://model-integration:8098
      - OPENAI_API_KEYS=sk-dummy;dummy-key
    volumes:
      - open-webui:/app/backend/data
      - logs:/app/logs
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - model-integration

  # AB-MCTS Service (Sakana AI implementation with Thompson Sampling)
  ab-mcts-service:
    build: .
    container_name: ab-mcts-service
    ports:
      - "8094:8094"
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/services/proper_treequest_ab_mcts_service.py"]
    volumes:
      - logs:/app/logs

  # Multi-Model Service (Proper implementation with sophisticated collaboration)
  multi-model-service:
    build: .
    container_name: multi-model-service
    ports:
      - "8090:8090"
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/services/proper_multi_model_service.py"]
    volumes:
      - logs:/app/logs

  # Backend Management API
  backend-api:
    build: .
    container_name: backend-api
    ports:
      - "8095:8095"
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - BACKEND_API_URL=http://localhost:8095
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/api/main.py"]
    volumes:
      - logs:/app/logs

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - openwebui-net
    restart: always

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - openwebui-net
    restart: always

  # HTTP Server for interfaces
  # MCP Server for Open WebUI Integration
  mcp-server:
    build: .
    container_name: mcp-server
    ports:
      - "8096:8096"
    environment:
      - AB_MCTS_SERVICE_URL=http://ab-mcts-service:8094
      - MULTI_MODEL_SERVICE_URL=http://multi-model-service:8090
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/mcp_server.py"]

  # Open WebUI Integration Service
  openwebui-integration:
    build: .
    container_name: openwebui-integration
    ports:
      - "8097:8097"
    environment:
      - AB_MCTS_SERVICE_URL=http://ab-mcts-service:8094
      - MULTI_MODEL_SERVICE_URL=http://multi-model-service:8090
      - MATERIALS_PROJECT_API_KEY=${MATERIALS_PROJECT_API_KEY}
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/openwebui_integration.py"]
    volumes:
      - logs:/app/logs

  # Model Integration Service
  model-integration:
    build: .
    container_name: model-integration
    ports:
      - "8098:8098"
    environment:
      - AB_MCTS_SERVICE_URL=http://ab-mcts-service:8094
      - MULTI_MODEL_SERVICE_URL=http://multi-model-service:8090
      - MATERIALS_PROJECT_API_KEY=${MATERIALS_PROJECT_API_KEY}
    networks:
      - openwebui-net
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["python", "backend/model_integration.py"]

  http-server:
    build: .
    container_name: http-server
    ports:
      - "8081:8080"
    volumes:
      - ./interfaces:/app/interfaces
    networks:
      - openwebui-net
    restart: always
    command: ["python", "-m", "http.server", "8080", "--directory", "interfaces"]

volumes:
  open-webui:
  logs: